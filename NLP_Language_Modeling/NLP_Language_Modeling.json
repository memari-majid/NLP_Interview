{
  "__type__": "Deck",
  "children": [],
  "crowdanki_uuid": "nlp-language_modeling-deck",
  "deck_config_uuid": "nlp-language_modeling-config",
  "deck_configurations": [
    {
      "__type__": "DeckConfig",
      "autoplay": true,
      "crowdanki_uuid": "nlp-language_modeling-config",
      "dyn": false,
      "name": "Language Modeling",
      "new": {
        "delays": [
          1,
          10
        ],
        "initialFactor": 2500,
        "ints": [
          1,
          4,
          7
        ],
        "order": 1,
        "perDay": 20
      },
      "rev": {
        "ease4": 1.3,
        "hardFactor": 1.2,
        "ivlFct": 1.0,
        "maxIvl": 36500,
        "perDay": 100
      }
    }
  ],
  "desc": "Statistical and neural approaches to language modeling",
  "dyn": 0,
  "extendNew": 10,
  "extendRev": 50,
  "media_files": [],
  "name": "Language Modeling",
  "note_models": [
    {
      "__type__": "NoteModel",
      "crowdanki_uuid": "nlp-language_modeling-model",
      "css": "\n.card {\n    font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 18px;\n    line-height: 1.5;\n    color: #2c3e50;\n    background: #f8f9fa;\n    text-align: left;\n    padding: 20px;\n    border-radius: 8px;\n    max-width: 100%;\n    margin: 0 auto;\n}\n\n@media (max-width: 480px) {\n    .card {\n        font-size: 16px;\n        padding: 15px;\n        line-height: 1.4;\n    }\n}\n\nb, strong {\n    color: #2980b9;\n    font-weight: 600;\n}\n\n.metadata {\n    margin-top: 15px;\n    padding-top: 10px;\n    border-top: 1px solid #bdc3c7;\n    font-size: 12px;\n    color: #7f8c8d;\n    text-align: center;\n}\n",
      "flds": [
        {
          "name": "Front",
          "ord": 0,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 20
        },
        {
          "name": "Back",
          "ord": 1,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 20
        },
        {
          "name": "Topic",
          "ord": 2,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 16
        },
        {
          "name": "Type",
          "ord": 3,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 14
        }
      ],
      "latexPost": "\\end{document}",
      "latexPre": "\\documentclass[12pt]{article}\\special{papersize=3in,5in}\\usepackage{amssymb,amsmath}\\pagestyle{empty}\\setlength{\\parindent}{0in}\\begin{document}",
      "name": "NLP Language Modeling",
      "req": [
        [
          0,
          "all",
          [
            0
          ]
        ]
      ],
      "sortf": 0,
      "tags": [],
      "tmpls": [
        {
          "afmt": "{{FrontSide}}<hr id=answer>{{Back}}<br><br><div class='metadata'><span style='background: #3498db; color: white; padding: 4px 8px; border-radius: 4px; font-weight: 600;'>{{Topic}}</span> • <span style='background: #95a5a6; color: white; padding: 4px 8px; border-radius: 4px; margin-left: 8px;'>{{Type}}</span></div>",
          "bafmt": "",
          "bqfmt": "",
          "did": null,
          "name": "Card 1",
          "ord": 0,
          "qfmt": "{{Front}}"
        }
      ],
      "type": 0,
      "vers": []
    }
  ],
  "notes": [
    {
      "__type__": "Note",
      "fields": [
        "What are n-grams and why are they useful?",
        "<b>Definition:</b> Contiguous sequences of n tokens<br>\n<b>Examples:</b> Unigrams (words), bigrams (word pairs), trigrams<br>\n<b>Use:</b> Language modeling, feature extraction<br>\n<b>Trade-off:</b> Higher n captures more context but increases sparsity",
        "Language Modeling",
        "concept"
      ],
      "guid": "nlp_e19faf077dc8e",
      "note_model_uuid": "nlp-language_modeling-model",
      "tags": [
        "language_modeling",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is the problem with n-gram language models?",
        "<b>Sparsity:</b> Many n-grams never seen in training<br>\n<b>Smoothing needed:</b> Assign probability to unseen sequences<br>\n<b>Limited context:</b> Fixed window size<br>\n<b>Curse of dimensionality:</b> Exponential growth with vocabulary",
        "Language Modeling",
        "concept"
      ],
      "guid": "nlp_4ed8dcc17ad60",
      "note_model_uuid": "nlp-language_modeling-model",
      "tags": [
        "language_modeling",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is perplexity in language modeling?",
        "<b>Definition:</b> Measure of how well a model predicts text<br>\n<b>Formula:</b> PP = exp(-1/N × Σlog P(wᵢ))<br>\n<b>Interpretation:</b> Average branching factor<br>\n<b>Lower is better:</b> Model is less \"perplexed\" by the text",
        "Language Modeling",
        "concept"
      ],
      "guid": "nlp_05c32ce48e9dd",
      "note_model_uuid": "nlp-language_modeling-model",
      "tags": [
        "language_modeling",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "How do neural language models work?",
        "<b>Approach:</b> Use neural networks to predict next word<br>\n<b>Advantages:</b> Continuous representations, longer context<br>\n<b>Architectures:</b> RNN, LSTM, Transformer<br>\n<b>Training:</b> Maximize likelihood of next word prediction",
        "Language Modeling",
        "concept"
      ],
      "guid": "nlp_1d8774231df11",
      "note_model_uuid": "nlp-language_modeling-model",
      "tags": [
        "language_modeling",
        "concept"
      ]
    }
  ]
}