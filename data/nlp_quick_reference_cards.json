[
  {
    "title": "SPACY Quick Reference",
    "install": "pip install spacy",
    "import": "import spacy\nnlp = spacy.load('en_core_web_sm')",
    "key_features": [
      "NER",
      "POS tagging",
      "Dependency parsing",
      "Tokenization"
    ],
    "when_to_use": "Industrial-strength NLP with pre-trained models"
  },
  {
    "title": "NLTK Quick Reference",
    "install": "pip install nltk",
    "import": "import nltk\nfrom nltk.tokenize import word_tokenize",
    "key_features": [
      "Corpora",
      "Tokenization",
      "Stemming",
      "Classification"
    ],
    "when_to_use": "Natural Language Toolkit for education and research"
  },
  {
    "title": "TRANSFORMERS Quick Reference",
    "install": "pip install transformers",
    "import": "from transformers import pipeline\nclassifier = pipeline('sentiment-analysis')",
    "key_features": [
      "BERT",
      "GPT",
      "T5",
      "Fine-tuning",
      "Pipelines"
    ],
    "when_to_use": "State-of-the-art transformer models by HuggingFace"
  },
  {
    "title": "GENSIM Quick Reference",
    "install": "pip install gensim",
    "import": "from gensim.models import Word2Vec, LdaModel",
    "key_features": [
      "Word2Vec",
      "Doc2Vec",
      "LDA",
      "LSA",
      "FastText"
    ],
    "when_to_use": "Topic modeling and document similarity"
  },
  {
    "title": "SENTENCE-TRANSFORMERS Quick Reference",
    "install": "pip install sentence-transformers",
    "import": "from sentence_transformers import SentenceTransformer\nmodel = SentenceTransformer('all-MiniLM-L6-v2')",
    "key_features": [
      "Semantic search",
      "Clustering",
      "Cross-encoders"
    ],
    "when_to_use": "Sentence embeddings for semantic similarity"
  },
  {
    "title": "FLAIR Quick Reference",
    "install": "pip install flair",
    "import": "from flair.models import SequenceTagger\ntagger = SequenceTagger.load('ner')",
    "key_features": [
      "NER",
      "POS",
      "Text classification",
      "Embeddings"
    ],
    "when_to_use": "Framework for state-of-the-art NLP"
  },
  {
    "title": "BERT Model Card",
    "type": "Encoder",
    "use_cases": [
      "Classification",
      "NER",
      "QA",
      "Understanding"
    ],
    "key_insight": "Bidirectional"
  },
  {
    "title": "GPT Model Card",
    "type": "Decoder",
    "use_cases": [
      "Generation",
      "Completion",
      "Few-shot learning"
    ],
    "key_insight": "Autoregressive (left-to-right)"
  },
  {
    "title": "T5 Model Card",
    "type": "Encoder-Decoder",
    "use_cases": [
      "Translation",
      "Summarization",
      "QA",
      "Any text-to-text"
    ],
    "key_insight": "Encoder: bidirectional, Decoder: autoregressive"
  },
  {
    "title": "WORD2VEC Model Card",
    "type": "Static embeddings",
    "use_cases": [],
    "key_insight": ""
  },
  {
    "title": "GLOVE Model Card",
    "type": "Static embeddings",
    "use_cases": [],
    "key_insight": ""
  }
]