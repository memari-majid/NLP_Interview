{
  "__type__": "Deck",
  "children": [],
  "crowdanki_uuid": "nlp-attention_transformers-deck",
  "deck_config_uuid": "nlp-attention_transformers-config",
  "deck_configurations": [
    {
      "__type__": "DeckConfig",
      "autoplay": true,
      "crowdanki_uuid": "nlp-attention_transformers-config",
      "dyn": false,
      "name": "Attention & Transformers",
      "new": {
        "delays": [
          1,
          10
        ],
        "initialFactor": 2500,
        "ints": [
          1,
          4,
          7
        ],
        "order": 1,
        "perDay": 15
      },
      "rev": {
        "ease4": 1.3,
        "hardFactor": 1.2,
        "ivlFct": 1.0,
        "maxIvl": 36500,
        "perDay": 50
      }
    }
  ],
  "desc": "Modern neural architectures powering current NLP",
  "dyn": 0,
  "extendNew": 10,
  "extendRev": 50,
  "media_files": [],
  "name": "Attention & Transformers",
  "note_models": [
    {
      "__type__": "NoteModel",
      "crowdanki_uuid": "nlp-attention_transformers-model",
      "css": "\n.card {\n    font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 18px;\n    line-height: 1.5;\n    color: #2c3e50;\n    background: #f8f9fa;\n    text-align: left;\n    padding: 20px;\n    border-radius: 8px;\n    max-width: 100%;\n    margin: 0 auto;\n}\n\n@media (max-width: 480px) {\n    .card {\n        font-size: 16px;\n        padding: 15px;\n        line-height: 1.4;\n    }\n}\n\nb, strong {\n    color: #2980b9;\n    font-weight: 600;\n}\n\n.metadata {\n    margin-top: 15px;\n    padding-top: 10px;\n    border-top: 1px solid #bdc3c7;\n    font-size: 12px;\n    color: #7f8c8d;\n    text-align: center;\n}\n",
      "flds": [
        {
          "name": "Front",
          "ord": 0,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 20
        },
        {
          "name": "Back",
          "ord": 1,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 20
        },
        {
          "name": "Topic",
          "ord": 2,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 16
        },
        {
          "name": "Type",
          "ord": 3,
          "sticky": false,
          "rtl": false,
          "font": "Arial",
          "size": 14
        }
      ],
      "latexPost": "\\end{document}",
      "latexPre": "\\documentclass[12pt]{article}\\special{papersize=3in,5in}\\usepackage{amssymb,amsmath}\\pagestyle{empty}\\setlength{\\parindent}{0in}\\begin{document}",
      "name": "NLP Attention & Transformers",
      "req": [
        [
          0,
          "all",
          [
            0
          ]
        ]
      ],
      "sortf": 0,
      "tags": [],
      "tmpls": [
        {
          "afmt": "{{FrontSide}}<hr id=answer>{{Back}}<br><br><div class='metadata'><span style='background: #3498db; color: white; padding: 4px 8px; border-radius: 4px; font-weight: 600;'>{{Topic}}</span> • <span style='background: #95a5a6; color: white; padding: 4px 8px; border-radius: 4px; margin-left: 8px;'>{{Type}}</span></div>",
          "bafmt": "",
          "bqfmt": "",
          "did": null,
          "name": "Card 1",
          "ord": 0,
          "qfmt": "{{Front}}"
        }
      ],
      "type": 0,
      "vers": []
    }
  ],
  "notes": [
    {
      "__type__": "Note",
      "fields": [
        "What is self-attention?",
        "<b>Intuition:</b> Weigh tokens by relevance to each other in sequence<br>\n<b>Formula:</b> Attention(Q,K,V) = softmax(QK^T/√d_k)V<br>\n<b>Symbols:</b> Q=query, K=key, V=value, d_k=key dimension<br>\n<b>Why:</b> Enables parallel computation and long-range dependencies",
        "Attention & Transformers",
        "concept"
      ],
      "guid": "nlp_a1f4140e5bd06",
      "note_model_uuid": "nlp-attention_transformers-model",
      "tags": [
        "attention_&_transformers",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "Write the attention formula with scaling",
        "<b>Formula:</b> softmax(QK^T/√d_k)V<br>\n<b>Symbols:</b> Q=query matrix, K=key matrix, V=value matrix<br>\n<b>Scaling:</b> √d_k prevents vanishing gradients in softmax<br>\n<b>Output:</b> Weighted sum of values based on attention scores",
        "Attention & Transformers",
        "concept"
      ],
      "guid": "nlp_11e847e058bc6",
      "note_model_uuid": "nlp-attention_transformers-model",
      "tags": [
        "attention_&_transformers",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "Why use attention over RNNs?",
        "<b>Parallelization:</b> All positions computed simultaneously<br>\n<b>Long-range:</b> Direct connections between any two positions<br>\n<b>Interpretability:</b> Attention weights show model focus<br>\n<b>Performance:</b> Better at capturing dependencies in long sequences",
        "Attention & Transformers",
        "concept"
      ],
      "guid": "nlp_1462479a37b26",
      "note_model_uuid": "nlp-attention_transformers-model",
      "tags": [
        "attention_&_transformers",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "Why do transformers work so well?",
        "<b>Parallelization:</b> No sequential bottleneck like RNNs<br>\n<b>Attention:</b> Direct connections between all positions<br>\n<b>Scalability:</b> Performance improves with more data/compute<br>\n<b>Transfer:</b> Pre-trained models adapt well to new tasks",
        "Attention & Transformers",
        "concept"
      ],
      "guid": "nlp_b53c77db0a3b5",
      "note_model_uuid": "nlp-attention_transformers-model",
      "tags": [
        "attention_&_transformers",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "Key components of transformer architecture?",
        "<b>Multi-head attention:</b> Parallel attention mechanisms<br>\n<b>Position encoding:</b> Inject sequence order information<br>\n<b>Layer norm + residual:</b> Training stability<br>\n<b>Feed-forward:</b> Non-linear transformations per position",
        "Attention & Transformers",
        "concept"
      ],
      "guid": "nlp_19be557e22714",
      "note_model_uuid": "nlp-attention_transformers-model",
      "tags": [
        "attention_&_transformers",
        "concept"
      ]
    }
  ]
}