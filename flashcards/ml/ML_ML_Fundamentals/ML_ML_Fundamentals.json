{
  "__type__": "Deck",
  "children": [],
  "crowdanki_uuid": "ml-ml-fundamentals-2024",
  "deck_config_uuid": "ml-interview-config",
  "deck_configurations": [
    {
      "__type__": "DeckConfig",
      "autoplay": true,
      "crowdanki_uuid": "ml-interview-config",
      "dyn": false,
      "name": "ML Fundamentals",
      "new": {
        "bury": true,
        "delays": [
          1,
          10
        ],
        "initialFactor": 2500,
        "ints": [
          1,
          4,
          7
        ],
        "order": 1,
        "perDay": 20,
        "separate": true
      },
      "rev": {
        "bury": true,
        "ease4": 1.3,
        "fuzz": 0.05,
        "ivlFct": 1.0,
        "maxIvl": 36500,
        "minSpace": 1,
        "perDay": 150
      }
    }
  ],
  "desc": "Core machine learning concepts every ML engineer must know",
  "dyn": 0,
  "extendNew": 10,
  "extendRev": 50,
  "media_files": [],
  "name": "ML Fundamentals",
  "note_models": [
    {
      "__type__": "NoteModel",
      "crowdanki_uuid": "ml-interview-model",
      "css": "\n.card {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    line-height: 1.5;\n    color: #333;\n    background-color: #fafafa;\n    padding: 20px;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.front { \n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 25px;\n    border-radius: 10px;\n}\n\n.back { \n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n    color: white;\n    padding: 25px;\n    border-radius: 10px;\n}\n\nb { color: #ffeb3b; font-weight: 600; }\n.formula { \n    font-family: 'Courier New', monospace; \n    background: rgba(255,255,255,0.2); \n    padding: 3px 6px; \n    border-radius: 4px;\n    font-size: 14px;\n}\n.example { font-style: italic; opacity: 0.9; }\n                    ",
      "flds": [
        {
          "__type__": "NoteModelField",
          "name": "Front",
          "ord": 0,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Back",
          "ord": 1,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Topic",
          "ord": 2,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Type",
          "ord": 3,
          "sticky": false
        }
      ],
      "name": "ML Interview Card",
      "req": [
        [
          0,
          "any",
          [
            0
          ]
        ]
      ],
      "sortf": 0,
      "tags": [],
      "tmpls": [
        {
          "__type__": "CardTemplate",
          "afmt": "<div class=\"card back\">{{Front}}<hr>{{Back}}<br><br><small><i>{{Topic}} • {{Type}}</i></small></div>",
          "bafmt": "",
          "bqfmt": "",
          "did": null,
          "name": "Card",
          "ord": 0,
          "qfmt": "<div class=\"card front\">{{Front}}</div>"
        }
      ],
      "type": 0,
      "vers": []
    }
  ],
  "notes": [
    {
      "__type__": "Note",
      "fields": [
        "What is Machine Learning and how does it differ from traditional programming?",
        "<b>ML Definition:</b> Algorithms that improve performance through experience without explicit programming<br>\n<b>Traditional:</b> Explicit rules → data → answers<br>\n<b>ML:</b> Data + answers → model → predictions<br>\n<b>Key difference:</b> ML learns patterns from data rather than following pre-written rules",
        "ML Fundamentals",
        "interview_concept"
      ],
      "guid": "ml_34fec747",
      "note_model_uuid": "ml-interview-model",
      "tags": [
        "ml_fundamentals",
        "interview_concept",
        "ml_interview"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is the bias-variance tradeoff?",
        "<b>Bias:</b> Error from oversimplifying assumptions (underfitting)<br>\n<b>Variance:</b> Error from sensitivity to small data fluctuations (overfitting)<br>\n<b>Tradeoff:</b> Reducing one typically increases the other<br>\n<b>Goal:</b> Find optimal balance that minimizes total error",
        "ML Fundamentals",
        "interview_concept"
      ],
      "guid": "ml_77775504",
      "note_model_uuid": "ml-interview-model",
      "tags": [
        "ml_fundamentals",
        "interview_concept",
        "ml_interview"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "Explain overfitting and underfitting with their causes and solutions.",
        "<b>Overfitting:</b> Model memorizes training data, poor generalization<br>\n<b>Underfitting:</b> Model too simple, high bias on training data<br>\n<b>Solutions:</b> Regularization, cross-validation, more data (overfitting)<br>\n<b>Solutions:</b> More complex model, more features (underfitting)",
        "ML Fundamentals",
        "interview_concept"
      ],
      "guid": "ml_56c163b1",
      "note_model_uuid": "ml-interview-model",
      "tags": [
        "ml_fundamentals",
        "interview_concept",
        "ml_interview"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is the curse of dimensionality in machine learning?",
        "<b>Problem:</b> As dimensions increase, data becomes exponentially sparse<br>\n<b>Impact:</b> Distance metrics become less meaningful, more data needed<br>\n<b>Example:</b> In high dimensions, all points appear equidistant<br>\n<b>Solutions:</b> Dimensionality reduction, feature selection, regularization",
        "ML Fundamentals",
        "interview_concept"
      ],
      "guid": "ml_9a7ac736",
      "note_model_uuid": "ml-interview-model",
      "tags": [
        "ml_fundamentals",
        "interview_concept",
        "ml_interview"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is the difference between supervised, unsupervised, and reinforcement learning?",
        "<b>Supervised:</b> Learn from labeled data (X,y) → prediction<br>\n<b>Unsupervised:</b> Find patterns in unlabeled data (X only)<br>\n<b>Reinforcement:</b> Learn through interaction with environment via rewards<br>\n<b>Examples:</b> Classification, clustering, game playing respectively",
        "ML Fundamentals",
        "interview_concept"
      ],
      "guid": "ml_8601f0e4",
      "note_model_uuid": "ml-interview-model",
      "tags": [
        "ml_fundamentals",
        "interview_concept",
        "ml_interview"
      ]
    }
  ]
}