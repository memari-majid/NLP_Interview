{
  "__type__": "Deck",
  "children": [],
  "crowdanki_uuid": "nlp-similarity-and-distance-metrics-2024",
  "deck_config_uuid": "nlp-comprehensive-config",
  "deck_configurations": [
    {
      "__type__": "DeckConfig",
      "autoplay": true,
      "crowdanki_uuid": "nlp-comprehensive-config",
      "dyn": false,
      "name": "Similarity and Distance Metrics",
      "new": {
        "bury": true,
        "delays": [
          1,
          10
        ],
        "initialFactor": 2500,
        "ints": [
          1,
          4,
          7
        ],
        "order": 1,
        "perDay": 15,
        "separate": true
      },
      "rev": {
        "bury": true,
        "ease4": 1.3,
        "fuzz": 0.05,
        "ivlFct": 1.0,
        "maxIvl": 36500,
        "minSpace": 1,
        "perDay": 100
      }
    }
  ],
  "desc": "Measuring relationships between text and vectors",
  "dyn": 0,
  "extendNew": 10,
  "extendRev": 50,
  "media_files": [],
  "name": "Similarity and Distance Metrics",
  "note_models": [
    {
      "__type__": "NoteModel",
      "crowdanki_uuid": "nlp-comprehensive-model",
      "css": "\n.card {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    line-height: 1.4;\n    color: #333;\n    background-color: #fafafa;\n    padding: 20px;\n    max-width: 500px;\n    margin: 0 auto;\n}\n\n.front { background-color: #e3f2fd; }\n.back { background-color: #f3e5f5; }\n\nb { color: #1976d2; font-weight: 600; }\n.formula { font-family: 'Courier New', monospace; background: #f5f5f5; padding: 2px 4px; }\n.example { font-style: italic; color: #555; }\n                    ",
      "flds": [
        {
          "__type__": "NoteModelField",
          "name": "Front",
          "ord": 0,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Back",
          "ord": 1,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Topic",
          "ord": 2,
          "sticky": false
        },
        {
          "__type__": "NoteModelField",
          "name": "Type",
          "ord": 3,
          "sticky": false
        }
      ],
      "name": "NLP Comprehensive",
      "req": [
        [
          0,
          "any",
          [
            0
          ]
        ]
      ],
      "sortf": 0,
      "tags": [],
      "tmpls": [
        {
          "__type__": "CardTemplate",
          "afmt": "<div class=\"card back\">{{Front}}<hr>{{Back}}<br><br><small><i>{{Topic}} • {{Type}}</i></small></div>",
          "bafmt": "",
          "bqfmt": "",
          "did": null,
          "name": "Card",
          "ord": 0,
          "qfmt": "<div class=\"card front\">{{Front}}</div>"
        }
      ],
      "type": 0,
      "vers": []
    }
  ],
  "notes": [
    {
      "__type__": "Note",
      "fields": [
        "What is cosine similarity and when do you use it?",
        "<b>Formula:</b> cos(θ) = (A·B) / (||A|| × ||B||)<br>\n<b>Intuition:</b> Angle between vectors, ignores magnitude<br>\n<b>Range:</b> [-1, 1], where 1 = identical direction<br>\n<b>Use:</b> Text similarity, document comparison, high-dimensional data",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_19f36c23",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "When should you use cosine similarity vs Euclidean distance?",
        "<b>Cosine:</b> When direction matters more than magnitude<br>\n<b>Euclidean:</b> When absolute differences matter<br>\n<b>Text example:</b> \"I love this\" vs \"I really really love this\" (same direction)<br>\n<b>Rule:</b> Cosine for normalized/high-dim data, Euclidean for coordinates",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_79eeffba",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is Jaccard similarity and what is it used for?",
        "<b>Formula:</b> J(A,B) = |A ∩ B| / |A ∪ B|<br>\n<b>Intuition:</b> Overlap between sets divided by total unique items<br>\n<b>Range:</b> [0, 1], where 1 = identical sets<br>\n<b>Applications:</b> Document similarity, recommendation systems, deduplication",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_d6d5dfd4",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is edit distance (Levenshtein distance)?",
        "<b>Definition:</b> Minimum operations to transform one string to another<br>\n<b>Operations:</b> Insert, delete, substitute characters<br>\n<b>Algorithm:</b> Dynamic programming, O(mn) time complexity<br>\n<b>Applications:</b> Spell checking, DNA analysis, plagiarism detection",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_a07de90c",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is semantic similarity vs syntactic similarity?",
        "<b>Semantic:</b> Similar meaning (\"car\" and \"automobile\")<br>\n<b>Syntactic:</b> Similar structure/grammar (\"run\" and \"walk\")<br>\n<b>Measurement:</b> Semantic uses embeddings, syntactic uses POS/structure<br>\n<b>Example:</b> \"happy\" vs \"glad\" (semantic), \"run\" vs \"jump\" (syntactic)",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_af23a3fd",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is Manhattan distance and when is it preferred?",
        "<b>Formula:</b> d = Σ|xᵢ - yᵢ| (sum of absolute differences)<br>\n<b>Also called:</b> L1 distance, taxicab distance<br>\n<b>Use when:</b> Features are not correlated, outliers present<br>\n<b>Advantage:</b> Less sensitive to outliers than Euclidean distance",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_8858d818",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "How do you measure similarity between documents?",
        "<b>Vector-based:</b> TF-IDF + cosine similarity<br>\n<b>Set-based:</b> Jaccard on word sets or n-grams<br>\n<b>Semantic:</b> Average word embeddings + cosine<br>\n<b>Modern:</b> BERT/sentence embeddings for deep semantic similarity",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_f9aa716f",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    },
    {
      "__type__": "Note",
      "fields": [
        "What is the difference between distance and similarity metrics?",
        "<b>Distance:</b> Larger values = more different (Euclidean, edit distance)<br>\n<b>Similarity:</b> Larger values = more similar (cosine, Jaccard)<br>\n<b>Conversion:</b> similarity = 1/(1+distance) or 1-normalized_distance<br>\n<b>Range:</b> Distance [0,∞], similarity typically [0,1] or [-1,1]",
        "Similarity and Distance Metrics",
        "concept"
      ],
      "guid": "nlp_6c227b95",
      "note_model_uuid": "nlp-comprehensive-model",
      "tags": [
        "similarity_and_distance_metrics",
        "concept"
      ]
    }
  ]
}